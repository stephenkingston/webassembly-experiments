/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: addition.proto */

#ifndef PROTOBUF_C_addition_2eproto__INCLUDED
#define PROTOBUF_C_addition_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _AddRequest AddRequest;
typedef struct _AddResponse AddResponse;


/* --- enums --- */


/* --- messages --- */

struct  _AddRequest
{
  ProtobufCMessage base;
  int32_t operand1;
  int32_t operand2;
};
#define ADD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_request__descriptor) \
    , 0, 0 }


struct  _AddResponse
{
  ProtobufCMessage base;
  int32_t result;
};
#define ADD_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&add_response__descriptor) \
    , 0 }


/* AddRequest methods */
void   add_request__init
                     (AddRequest         *message);
size_t add_request__get_packed_size
                     (const AddRequest   *message);
size_t add_request__pack
                     (const AddRequest   *message,
                      uint8_t             *out);
size_t add_request__pack_to_buffer
                     (const AddRequest   *message,
                      ProtobufCBuffer     *buffer);
AddRequest *
       add_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_request__free_unpacked
                     (AddRequest *message,
                      ProtobufCAllocator *allocator);
/* AddResponse methods */
void   add_response__init
                     (AddResponse         *message);
size_t add_response__get_packed_size
                     (const AddResponse   *message);
size_t add_response__pack
                     (const AddResponse   *message,
                      uint8_t             *out);
size_t add_response__pack_to_buffer
                     (const AddResponse   *message,
                      ProtobufCBuffer     *buffer);
AddResponse *
       add_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   add_response__free_unpacked
                     (AddResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*AddRequest_Closure)
                 (const AddRequest *message,
                  void *closure_data);
typedef void (*AddResponse_Closure)
                 (const AddResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor add_request__descriptor;
extern const ProtobufCMessageDescriptor add_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_addition_2eproto__INCLUDED */
